"""Initial

Revision ID: 01
Revises:
Create Date: 2025-02-12 21:00:19.527349

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "01"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companies",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_date",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column("inn", sa.String(length=16), nullable=False),
        sa.Column("kpp", sa.String(length=9), nullable=False),
        sa.Column("ogrn", sa.String(length=13), nullable=True),
        sa.Column("bic", sa.String(length=9), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_companies_bic", "companies", ["bic"], unique=False)
    op.create_index("idx_companies_inn", "companies", ["inn"], unique=False)
    op.create_index("idx_companies_kpp", "companies", ["kpp"], unique=False)
    op.create_index("idx_companies_ogrn", "companies", ["ogrn"], unique=False)
    op.create_table(
        "functions_dict",
        sa.Column("id", sa.SmallInteger(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("version", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "modules",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=60), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_modules_code", "modules", ["code"], unique=False)
    op.create_table(
        "property_code_dict",
        sa.Column("id", sa.SmallInteger(), autoincrement=True, nullable=False),
        sa.Column("group_code", sa.String(length=30), nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_property_code_dict_code",
        "property_code_dict",
        ["code"],
        unique=False,
    )
    op.create_index(
        "idx_property_code_dict_group_code_code",
        "property_code_dict",
        ["group_code", "code"],
        unique=False,
    )
    op.create_table(
        "roles_dict",
        sa.Column("id", sa.SmallInteger(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=60), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "settings_dict",
        sa.Column("id", sa.SmallInteger(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_settings_dict_code", "settings_dict", ["code"], unique=False
    )
    op.create_table(
        "shablon_dict",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("value", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_shablon_dict_code", "shablon_dict", ["code"], unique=False
    )
    op.create_table(
        "status_dict",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=16), nullable=False),
        sa.Column("name", sa.String(length=60), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_status_dict_code", "status_dict", ["code"], unique=False
    )
    op.create_table(
        "timezone_dict",
        sa.Column("id", sa.SmallInteger(), autoincrement=True, nullable=False),
        sa.Column("timezone_name", sa.String(length=255), nullable=True),
        sa.Column("timezone", sa.Time(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "company_properties",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("company_id", sa.BigInteger(), nullable=False),
        sa.Column("property_code_id", sa.SmallInteger(), nullable=False),
        sa.Column("value", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name="fk_company_id_secondary",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["property_code_id"],
            ["property_code_dict.id"],
            name="fk_property_code_id_secondary",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "company_id", "property_code_id", name="unique_company_property"
        ),
    )
    op.create_index(
        "idx_company_properties_company_id",
        "company_properties",
        ["company_id"],
        unique=False,
    )
    op.create_index(
        "idx_company_properties_company_id_property_code_id",
        "company_properties",
        ["company_id", "property_code_id"],
        unique=False,
    )
    op.create_index(
        "idx_company_properties_property_code_id",
        "company_properties",
        ["property_code_id"],
        unique=True,
    )
    op.create_table(
        "departments",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("company_id", sa.BigInteger(), nullable=False),
        sa.Column("code", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_date",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_departments_code", "departments", ["code"], unique=False
    )
    op.create_index(
        "idx_departments_company_id",
        "departments",
        ["company_id"],
        unique=False,
    )
    op.create_table(
        "license",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("company_id", sa.BigInteger(), nullable=False),
        sa.Column("license_key", sa.String(length=1000), nullable=False),
        sa.Column("active_from", sa.Date(), nullable=False),
        sa.Column("active_to", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"], ["companies.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_license_active_from_active_to",
        "license",
        ["active_from", "active_to"],
        unique=False,
    )
    op.create_index(
        "idx_license_company_id", "license", ["company_id"], unique=False
    )
    op.create_index(
        "idx_license_company_id_active_from",
        "license",
        ["company_id", "active_from"],
        unique=False,
    )
    op.create_index(
        "idx_license_company_id_active_from_active_to",
        "license",
        ["company_id", "active_from", "active_to"],
        unique=False,
    )
    op.create_table(
        "module_company_links",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.BigInteger(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=False),
        sa.Column("active_from", sa.Date(), nullable=False),
        sa.Column("active_to", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
            name="fk_company_id_secondary",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["module_id"],
            ["modules.id"],
            name="fk_module_id_secondary",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "company_id", "module_id", name="unique_company_module"
        ),
    )
    op.create_index(
        "idx_module_company_links_active_from",
        "module_company_links",
        ["active_from"],
        unique=False,
    )
    op.create_index(
        "idx_module_company_links_active_to",
        "module_company_links",
        ["active_to"],
        unique=False,
    )
    op.create_index(
        "idx_module_company_links_company_id",
        "module_company_links",
        ["company_id"],
        unique=False,
    )
    op.create_index(
        "idx_module_company_links_company_id_active_from_active_to",
        "module_company_links",
        ["company_id", "active_from", "active_to"],
        unique=False,
    )
    op.create_index(
        "idx_module_company_links_module_id",
        "module_company_links",
        ["module_id"],
        unique=False,
    )
    op.create_table(
        "reports",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=30), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("shablon_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["shablon_id"],
            ["shablon_dict.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_reports_code", "reports", ["code"], unique=False)
    op.create_index(
        "idx_reports_code_version",
        "reports",
        ["code", "version"],
        unique=False,
    )
    op.create_table(
        "role_functions",
        sa.Column("id", sa.SmallInteger(), autoincrement=True, nullable=False),
        sa.Column("role_id", sa.SmallInteger(), nullable=False),
        sa.Column("function_code_id", sa.SmallInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["function_code_id"],
            ["functions_dict.id"],
            name="fk_function_code_id_secondary",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles_dict.id"],
            name="fk_role_id_secondary",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "function_code_id", "role_id", name="unique_function_role"
        ),
    )
    op.create_index(
        "idx_role_functions_function_code_id",
        "role_functions",
        ["function_code_id"],
        unique=False,
    )
    op.create_index(
        "idx_role_functions_role_id",
        "role_functions",
        ["role_id"],
        unique=False,
    )
    op.create_table(
        "settings",
        sa.Column("id", sa.SmallInteger(), autoincrement=True, nullable=False),
        sa.Column("setting_code_id", sa.SmallInteger(), nullable=False),
        sa.Column("value", sa.String(length=255), nullable=False),
        sa.Column("active_from", sa.Date(), nullable=False),
        sa.Column("active_to", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["setting_code_id"],
            ["settings_dict.id"],
            name="fk_setting_code_id",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_settings_active_from", "settings", ["active_from"], unique=False
    )
    op.create_index(
        "idx_settings_active_from_active_to",
        "settings",
        ["active_from", "active_to"],
        unique=False,
    )
    op.create_index(
        "idx_settings_active_to", "settings", ["active_to"], unique=False
    )
    op.create_index(
        "idx_settings_property_code_id_active_from_active_to",
        "settings",
        ["setting_code_id", "active_from", "active_to"],
        unique=False,
    )
    op.create_index(
        "idx_settings_setting_code_id",
        "settings",
        ["setting_code_id"],
        unique=False,
    )
    op.create_index(
        "idx_settings_setting_code_id_active_to",
        "settings",
        ["setting_code_id", "active_to"],
        unique=False,
    )
    op.create_table(
        "user_groups",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("company_id", sa.BigInteger(), nullable=False),
        sa.Column("group_name", sa.String(length=255), nullable=False),
        sa.Column("comment", sa.String(length=1000), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"], ["companies.id"], name="fk_company_id"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_user_groups_company_id",
        "user_groups",
        ["company_id"],
        unique=False,
    )
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("company_id", sa.BigInteger(), nullable=False),
        sa.Column("group_id", sa.BigInteger(), nullable=False),
        sa.Column("timezone_id", sa.SmallInteger(), nullable=False),
        sa.Column("username", sa.String(length=60), nullable=False),
        sa.Column("firstname", sa.String(length=60), nullable=False),
        sa.Column("lastname", sa.String(length=60), nullable=False),
        sa.Column("patronymic", sa.String(length=60), nullable=True),
        sa.Column(
            "created_date",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column("user_lock", sa.Boolean(), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("comment", sa.String(length=1000), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"], ["companies.id"], name="fk_company_id"
        ),
        sa.ForeignKeyConstraint(
            ["group_id"], ["user_groups.id"], name="fk_group_id"
        ),
        sa.ForeignKeyConstraint(
            ["timezone_id"], ["timezone_dict.id"], name="fk_timezone_id"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_users_company_id", "users", ["company_id"], unique=False
    )
    op.create_index(
        "idx_users_company_id_group_id",
        "users",
        ["company_id", "group_id"],
        unique=False,
    )
    op.create_index("idx_users_group_id", "users", ["group_id"], unique=False)
    op.create_index(
        "idx_users_id_company_id", "users", ["id", "company_id"], unique=False
    )
    op.create_index(
        "idx_users_id_group_id", "users", ["id", "group_id"], unique=False
    )
    op.create_index(
        "idx_users_timezone_id", "users", ["timezone_id"], unique=False
    )
    op.create_index("idx_users_username", "users", ["username"], unique=False)
    op.create_index(
        "idx_users_username_user_lock",
        "users",
        ["username", "user_lock"],
        unique=False,
    )
    op.create_table(
        "user_properties",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("property_code_id", sa.SmallInteger(), nullable=False),
        sa.Column("value", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["property_code_id"],
            ["property_code_dict.id"],
            name="fk_property_code_id_secondary",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="fk_user_id_secondary",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "property_code_id", name="idx_user_properties_property_code_id"
        ),
        sa.UniqueConstraint(
            "user_id", "property_code_id", name="unique_user_property"
        ),
    )
    op.create_index(
        "idx_user_properties_property_id",
        "user_properties",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        "idx_user_properties_property_id_property_code_id",
        "user_properties",
        ["user_id", "property_code_id"],
        unique=False,
    )
    op.create_table(
        "user_report_links",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("report_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_date",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column("acive_from", sa.Date(), nullable=False),
        sa.Column("active_to", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["report_id"],
            ["reports.id"],
            name="fk_report_id_secondary",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="fk_user_id_secondary",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "report_id", name="unique_user_report"),
    )
    op.create_index(
        "idx_user_report_links_acive_from",
        "user_report_links",
        ["acive_from"],
        unique=False,
    )
    op.create_index(
        "idx_user_report_links_acive_from_active_to",
        "user_report_links",
        ["acive_from", "active_to"],
        unique=False,
    )
    op.create_index(
        "idx_user_report_links_active_to",
        "user_report_links",
        ["active_to"],
        unique=False,
    )
    op.create_index(
        "idx_user_report_links_created_date",
        "user_report_links",
        ["created_date"],
        unique=False,
    )
    op.create_index(
        "idx_user_report_links_id", "user_report_links", ["id"], unique=False
    )
    op.create_index(
        "idx_user_report_links_report_id",
        "user_report_links",
        ["report_id"],
        unique=False,
        postgresql_using="btree",
        postgresql_where="report_id IS NOT NULL",
    )
    op.create_index(
        "idx_user_report_links_user_id",
        "user_report_links",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        "idx_user_report_links_user_id_acive_from_active_to",
        "user_report_links",
        ["user_id", "acive_from", "active_to"],
        unique=False,
    )
    op.create_index(
        "idx_user_report_links_user_id_active_to",
        "user_report_links",
        ["user_id", "active_to"],
        unique=False,
    )
    op.create_table(
        "user_roles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("role_id", sa.SmallInteger(), nullable=False),
        sa.Column("active_from", sa.Date(), nullable=False),
        sa.Column("active_to", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles_dict.id"],
            name="fk_role_id_secondary",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="fk_user_id_secondary",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "role_id", name="unique_user_role"),
    )
    op.create_index(
        "idx_user_roles_active_from",
        "user_roles",
        ["active_from"],
        unique=False,
    )
    op.create_index(
        "idx_user_roles_active_to", "user_roles", ["active_to"], unique=False
    )
    op.create_index(
        "idx_user_roles_role_id", "user_roles", ["role_id"], unique=False
    )
    op.create_index(
        "idx_user_roles_user_id", "user_roles", ["user_id"], unique=False
    )
    op.create_index(
        "idx_user_roles_user_id_role_id_active_to",
        "user_roles",
        ["user_id", "role_id", "active_to"],
        unique=False,
    )
    op.create_table(
        "user_sendings",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_date",
            sa.Date(),
            server_default=sa.text("CURRENT_DATE"),
            nullable=False,
        ),
        sa.Column("message", sa.String(length=4000), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"], ["status_dict.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "status_id", name="unique_user_status"),
    )
    op.create_index(
        "idx_user_sendings_created_date",
        "user_sendings",
        ["created_date"],
        unique=False,
    )
    op.create_index(
        "idx_user_sendings_status_id",
        "user_sendings",
        ["status_id"],
        unique=False,
        postgresql_using="btree",
        postgresql_where="status_id IS NOT NULL",
    )
    op.create_index(
        "idx_user_sendings_user_id",
        "user_sendings",
        ["user_id"],
        unique=False,
        postgresql_using="btree",
        postgresql_where="user_id IS NOT NULL",
    )
    op.create_index(
        "idx_user_sendings_user_id_status_id_created_date",
        "user_sendings",
        ["user_id", "status_id", "created_date"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_user_sendings_user_id_status_id_created_date",
        table_name="user_sendings",
    )
    op.drop_index(
        "idx_user_sendings_user_id",
        table_name="user_sendings",
        postgresql_using="btree",
        postgresql_where="user_id IS NOT NULL",
    )
    op.drop_index(
        "idx_user_sendings_status_id",
        table_name="user_sendings",
        postgresql_using="btree",
        postgresql_where="status_id IS NOT NULL",
    )
    op.drop_index("idx_user_sendings_created_date", table_name="user_sendings")
    op.drop_table("user_sendings")
    op.drop_index(
        "idx_user_roles_user_id_role_id_active_to", table_name="user_roles"
    )
    op.drop_index("idx_user_roles_user_id", table_name="user_roles")
    op.drop_index("idx_user_roles_role_id", table_name="user_roles")
    op.drop_index("idx_user_roles_active_to", table_name="user_roles")
    op.drop_index("idx_user_roles_active_from", table_name="user_roles")
    op.drop_table("user_roles")
    op.drop_index(
        "idx_user_report_links_user_id_active_to",
        table_name="user_report_links",
    )
    op.drop_index(
        "idx_user_report_links_user_id_acive_from_active_to",
        table_name="user_report_links",
    )
    op.drop_index(
        "idx_user_report_links_user_id", table_name="user_report_links"
    )
    op.drop_index(
        "idx_user_report_links_report_id",
        table_name="user_report_links",
        postgresql_using="btree",
        postgresql_where="report_id IS NOT NULL",
    )
    op.drop_index("idx_user_report_links_id", table_name="user_report_links")
    op.drop_index(
        "idx_user_report_links_created_date", table_name="user_report_links"
    )
    op.drop_index(
        "idx_user_report_links_active_to", table_name="user_report_links"
    )
    op.drop_index(
        "idx_user_report_links_acive_from_active_to",
        table_name="user_report_links",
    )
    op.drop_index(
        "idx_user_report_links_acive_from", table_name="user_report_links"
    )
    op.drop_table("user_report_links")
    op.drop_index(
        "idx_user_properties_property_id_property_code_id",
        table_name="user_properties",
    )
    op.drop_index(
        "idx_user_properties_property_id", table_name="user_properties"
    )
    op.drop_table("user_properties")
    op.drop_index("idx_users_username_user_lock", table_name="users")
    op.drop_index("idx_users_username", table_name="users")
    op.drop_index("idx_users_timezone_id", table_name="users")
    op.drop_index("idx_users_id_group_id", table_name="users")
    op.drop_index("idx_users_id_company_id", table_name="users")
    op.drop_index("idx_users_group_id", table_name="users")
    op.drop_index("idx_users_company_id_group_id", table_name="users")
    op.drop_index("idx_users_company_id", table_name="users")
    op.drop_table("users")
    op.drop_index("idx_user_groups_company_id", table_name="user_groups")
    op.drop_table("user_groups")
    op.drop_index(
        "idx_settings_setting_code_id_active_to", table_name="settings"
    )
    op.drop_index("idx_settings_setting_code_id", table_name="settings")
    op.drop_index(
        "idx_settings_property_code_id_active_from_active_to",
        table_name="settings",
    )
    op.drop_index("idx_settings_active_to", table_name="settings")
    op.drop_index("idx_settings_active_from_active_to", table_name="settings")
    op.drop_index("idx_settings_active_from", table_name="settings")
    op.drop_table("settings")
    op.drop_index("idx_role_functions_role_id", table_name="role_functions")
    op.drop_index(
        "idx_role_functions_function_code_id", table_name="role_functions"
    )
    op.drop_table("role_functions")
    op.drop_index("idx_reports_code_version", table_name="reports")
    op.drop_index("idx_reports_code", table_name="reports")
    op.drop_table("reports")
    op.drop_index(
        "idx_module_company_links_module_id", table_name="module_company_links"
    )
    op.drop_index(
        "idx_module_company_links_company_id_active_from_active_to",
        table_name="module_company_links",
    )
    op.drop_index(
        "idx_module_company_links_company_id",
        table_name="module_company_links",
    )
    op.drop_index(
        "idx_module_company_links_active_to", table_name="module_company_links"
    )
    op.drop_index(
        "idx_module_company_links_active_from",
        table_name="module_company_links",
    )
    op.drop_table("module_company_links")
    op.drop_index(
        "idx_license_company_id_active_from_active_to", table_name="license"
    )
    op.drop_index("idx_license_company_id_active_from", table_name="license")
    op.drop_index("idx_license_company_id", table_name="license")
    op.drop_index("idx_license_active_from_active_to", table_name="license")
    op.drop_table("license")
    op.drop_index("idx_departments_company_id", table_name="departments")
    op.drop_index("idx_departments_code", table_name="departments")
    op.drop_table("departments")
    op.drop_index(
        "idx_company_properties_property_code_id",
        table_name="company_properties",
    )
    op.drop_index(
        "idx_company_properties_company_id_property_code_id",
        table_name="company_properties",
    )
    op.drop_index(
        "idx_company_properties_company_id", table_name="company_properties"
    )
    op.drop_table("company_properties")
    op.drop_table("timezone_dict")
    op.drop_index("idx_status_dict_code", table_name="status_dict")
    op.drop_table("status_dict")
    op.drop_index("idx_shablon_dict_code", table_name="shablon_dict")
    op.drop_table("shablon_dict")
    op.drop_index("idx_settings_dict_code", table_name="settings_dict")
    op.drop_table("settings_dict")
    op.drop_table("roles_dict")
    op.drop_index(
        "idx_property_code_dict_group_code_code",
        table_name="property_code_dict",
    )
    op.drop_index(
        "idx_property_code_dict_code", table_name="property_code_dict"
    )
    op.drop_table("property_code_dict")
    op.drop_index("idx_modules_code", table_name="modules")
    op.drop_table("modules")
    op.drop_table("functions_dict")
    op.drop_index("idx_companies_ogrn", table_name="companies")
    op.drop_index("idx_companies_kpp", table_name="companies")
    op.drop_index("idx_companies_inn", table_name="companies")
    op.drop_index("idx_companies_bic", table_name="companies")
    op.drop_table("companies")
    # ### end Alembic commands ###
